"use strict";(self.webpackChunkopenapi_qraft_website=self.webpackChunkopenapi_qraft_website||[]).push([[6191],{1208:(e,t,n)=>{n.d(t,{A:()=>i});n(3696);var r=n(2689);const s={tabItem:"tabItem_wHwb"};var a=n(2540);function i(e){let{children:t,hidden:n,className:i}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,i),hidden:n,children:t})}},9515:(e,t,n)=>{n.d(t,{A:()=>g});var r=n(3696),s=n(2689),a=n(3447),i=n(9519),l=n(6960),o=n(9624),u=n(6953),c=n(9866);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:s}}=e;return{value:t,label:n,attributes:r,default:s}}))}(n);return function(e){const t=(0,u.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const s=(0,i.W6)(),a=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,o.aZ)(a),(0,r.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(s.location.search);t.set(a,e),s.replace({...s.location,search:t.toString()})}),[a,s])]}function m(e){const{defaultValue:t,queryString:n=!1,groupId:s}=e,a=h(e),[i,o]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:a}))),[u,d]=f({queryString:n,groupId:s}),[m,y]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,a]=(0,c.Dv)(n);return[s,(0,r.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:s}),x=(()=>{const e=u??m;return p({value:e,tabValues:a})?e:null})();(0,l.A)((()=>{x&&o(x)}),[x]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),y(e)}),[d,y,a]),tabValues:a}}var y=n(9244);const x={tabList:"tabList_J5MA",tabItem:"tabItem_l0OV"};var b=n(2540);function j(e){let{className:t,block:n,selectedValue:r,selectValue:i,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:u}=(0,a.a_)(),c=e=>{const t=e.currentTarget,n=o.indexOf(t),s=l[n].value;s!==r&&(u(t),i(s))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;t=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;t=o[n]??o[o.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},t),children:l.map((e=>{let{value:t,label:n,attributes:a}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>o.push(e),onKeyDown:d,onClick:c,...a,className:(0,s.A)("tabs__item",x.tabItem,a?.className,{"tabs__item--active":r===t}),children:n??t},t)}))})}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:i.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a})))})}function q(e){const t=m(e);return(0,b.jsxs)("div",{className:(0,s.A)("tabs-container",x.tabList),children:[(0,b.jsx)(j,{...t,...e}),(0,b.jsx)(v,{...t,...e})]})}function g(e){const t=(0,y.A)();return(0,b.jsx)(q,{...e,children:d(e.children)},String(t))}},487:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"query-client/fetchQuery","title":"fetchQuery(...)","description":"The method allows you to execute a Queries without React Hooks with the full power of QueryClient.","source":"@site/docs/query-client/fetchQuery.mdx","sourceDirName":"query-client","slug":"/query-client/fetchQuery","permalink":"/openapi-qraft/docs/next/query-client/fetchQuery","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenAPI-Qraft/openapi-qraft/edit/main/website/docs/query-client/fetchQuery.mdx","tags":[],"version":"current","frontMatter":{"sidebar_label":"fetchQuery()"},"sidebar":"mainDocsSidebar","previous":{"title":"fetchInfiniteQuery()","permalink":"/openapi-qraft/docs/next/query-client/fetchInfiniteQuery"},"next":{"title":"getInfiniteQueryData()","permalink":"/openapi-qraft/docs/next/query-client/getInfiniteQueryData"}}');var s=n(2540),a=n(3023),i=n(9515),l=n(1208);const o={sidebar_label:"fetchQuery()"},u="fetchQuery(...)",c={},d=[{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",del:"del",em:"em",h1:"h1",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",span:"span",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"fetchquery",children:"fetchQuery(...)"})}),"\n",(0,s.jsxs)(t.p,{children:["The method allows you to execute a ",(0,s.jsx)(t.em,{children:"Queries"})," without React Hooks with the full power of ",(0,s.jsx)(t.em,{children:"QueryClient"}),".\nTo understand how ",(0,s.jsx)(t.code,{children:"fetchQuery"})," handles data and cache management,\nrefer to the TanStack ",(0,s.jsx)(t.a,{href:"https://tanstack.com/query/latest/docs/reference/QueryClient#queryclientfetchquery",children:(0,s.jsx)(t.em,{children:"queryClient.fetchQuery \ud83c\udf34"})})," documentation."]}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"fetchQuery"})," is particularly useful for server-side data fetching (SSR). When used on the server, it automatically\nprovides all the retry logic and caching capabilities inherent to TanStack Query.\nThis makes it an excellent choice for efficient and robust server-side data retrieval, ensuring your application benefits\nfrom built-in error handling and performance optimizations."]})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"const result = api.<service>.<operation>.fetchQuery(\n  {\n    parameters,\n    ...fetchQueryOptions,\n  }\n);\n"})}),"\n",(0,s.jsx)(t.h3,{id:"arguments",children:"Arguments"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"parameters: { path, query, header } | QueryKey | void"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Required"}),", OpenAPI request parameters for the query, strictly-typed \u2728"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"parameters"})," will be used to generate the ",(0,s.jsx)(t.code,{children:"QueryKey"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"requestFn?: RequestFn"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Optional"}),", a function that will be used to execute the request"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"baseUrl?: string"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Optional"}),", the base URL of the API"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"...fetchQueryOptions?: FetchQueryOptions"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Optional"}),", represents the rest options of the ",(0,s.jsx)(t.a,{href:"https://tanstack.com/query/latest/docs/reference/QueryClient#queryclientfetchquery",children:(0,s.jsx)(t.em,{children:"fetchQuery(...) \ud83c\udf34"})})," method"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"queryOptions.queryFn"})," could be provided instead of ",(0,s.jsx)(t.del,{children:(0,s.jsx)(t.code,{children:"requestFn"})})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"queryOptions.queryKey"})," could be provided instead of ",(0,s.jsx)(t.del,{children:(0,s.jsx)(t.code,{children:"parameters"})})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"result: Promise<T>"})," - The result of the query execution"]}),"\n",(0,s.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsx)(l.A,{value:"example1",label:"Basic",default:!0,children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import { createAPIClient } from './api'; // generated by OpenAPI Qraft CLI\nimport { requestFn } from '@openapi-qraft/react';\nimport { QueryClient } from '@tanstack/react-query';\n\nconst api = createAPIClient({\n  requestFn,\n  queryClient: new QueryClient(),\n  baseUrl: 'https://api.sandbox.monite.com/v1',\n});\n\n/**\n * Executes the request:\n * ###\n * GET /posts?limit=10\n **/\nconst posts = await api.posts.getPosts.fetchQuery(\n  { parameters: { query: { limit: 10 } } }\n);\n"})})}),(0,s.jsx)(l.A,{value:"with-query-fn",label:(0,s.jsxs)(t.span,{style:{verticalAlign:"middle"},children:["With ",(0,s.jsx)(t.code,{children:"queryFn"})]}),children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import { createAPIClient } from './api'; // generated by OpenAPI Qraft CLI\nimport { requestFn } from '@openapi-qraft/react';\nimport { QueryClient } from '@tanstack/react-query';\n\nconst api = createAPIClient({\n  requestFn,\n  queryClient: new QueryClient(),\n  baseUrl: 'https://api.sandbox.monite.com/v1',\n});\n\n/**\n * Executes the request:\n * ###\n * GET /posts?limit=10\n **/\nconst posts = await api.posts.getPosts.fetchQuery(\n  {\n    // \u2b07\ufe0e `queryKey` could be provided instead of `parameters`\n    queryKey: api.posts.getPosts.getQueryKey({ query: { limit: 10 } }),\n    // \u2b07\ufe0e `queryFn` could be provided\n    queryFn: function myCustomQueryFn({ queryKey, ...rest }) {\n      // ...\n    },\n  }\n);\n"})})})]})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},3023:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>l});var r=n(3696);const s={},a=r.createContext(s);function i(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);