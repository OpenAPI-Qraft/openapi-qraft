"use strict";(self.webpackChunkopenapi_qraft_website=self.webpackChunkopenapi_qraft_website||[]).push([[4814],{2185:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"2.x","banner":null,"badge":true,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"mainDocsSidebar":[{"type":"link","label":"Overview","href":"/openapi-qraft/docs/overview","docId":"overview","unlisted":false},{"type":"category","label":"Getting Started","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Installation","href":"/openapi-qraft/docs/getting-started/installation","docId":"getting-started/installation","unlisted":false},{"type":"link","label":"Quick Start","href":"/openapi-qraft/docs/getting-started/quick-start","docId":"getting-started/quick-start","unlisted":false}]},{"type":"category","label":"Codegen","collapsible":false,"collapsed":false,"items":[{"type":"category","label":"CLI","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"--operation-predefined-parameters","href":"/openapi-qraft/docs/codegen/CLI/create-predefined-parameters-request-fn","docId":"codegen/CLI/create-predefined-parameters-request-fn","unlisted":false}],"href":"/openapi-qraft/docs/codegen/CLI/"},{"type":"link","label":"createAPIClient()","href":"/openapi-qraft/docs/codegen/create-api-client-function","docId":"codegen/create-api-client-function","unlisted":false}]},{"type":"category","label":"Fetch","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"GET, HEAD, OPTIONS","href":"/openapi-qraft/docs/core/query-operation","docId":"core/query-operation","unlisted":false},{"type":"link","label":"POST, PUT, PATCH, DELETE","href":"/openapi-qraft/docs/core/mutation-operation","docId":"core/mutation-operation","unlisted":false}]},{"type":"category","label":"Authentication \ud83e\uddea","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"<QraftSecureRequestFn />","href":"/openapi-qraft/docs/authorization/qraft-secure-request-fn","docId":"authorization/qraft-secure-request-fn","unlisted":false},{"type":"link","label":"Bearer Authentication","href":"/openapi-qraft/docs/authorization/bearer-authentication","docId":"authorization/bearer-authentication","unlisted":false},{"type":"link","label":"API Key Authentication","href":"/openapi-qraft/docs/authorization/api-key-authentication","docId":"authorization/api-key-authentication","unlisted":false},{"type":"link","label":"Basic Authentication","href":"/openapi-qraft/docs/authorization/basic-authentication","docId":"authorization/basic-authentication","unlisted":false},{"type":"link","label":"Cookie Authentication","href":"/openapi-qraft/docs/authorization/cookie-authentication","docId":"authorization/cookie-authentication","unlisted":false}]},{"type":"category","label":"React","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"useQuery()","href":"/openapi-qraft/docs/hooks/useQuery","docId":"hooks/useQuery","unlisted":false},{"type":"link","label":"useMutation()","href":"/openapi-qraft/docs/hooks/useMutation","docId":"hooks/useMutation","unlisted":false},{"type":"link","label":"useInfiniteQuery()","href":"/openapi-qraft/docs/hooks/useInfiniteQuery","docId":"hooks/useInfiniteQuery","unlisted":false},{"type":"link","label":"useIsFetching()","href":"/openapi-qraft/docs/hooks/useIsFetching","docId":"hooks/useIsFetching","unlisted":false},{"type":"link","label":"useIsMutating()","href":"/openapi-qraft/docs/hooks/useIsMutating","docId":"hooks/useIsMutating","unlisted":false},{"type":"link","label":"useMutationState()","href":"/openapi-qraft/docs/hooks/useMutationState","docId":"hooks/useMutationState","unlisted":false},{"type":"link","label":"useQueries()","href":"/openapi-qraft/docs/hooks/useQueries","docId":"hooks/useQueries","unlisted":false},{"type":"link","label":"useSuspenseInfiniteQuery()","href":"/openapi-qraft/docs/hooks/useSuspenseInfiniteQuery","docId":"hooks/useSuspenseInfiniteQuery","unlisted":false},{"type":"link","label":"useSuspenseQueries()","href":"/openapi-qraft/docs/hooks/useSuspenseQueries","docId":"hooks/useSuspenseQueries","unlisted":false},{"type":"link","label":"useSuspenseQuery()","href":"/openapi-qraft/docs/hooks/useSuspenseQuery","docId":"hooks/useSuspenseQuery","unlisted":false}]},{"type":"category","label":"QueryClient","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"cancelQueries()","href":"/openapi-qraft/docs/query-client/cancelQueries","docId":"query-client/cancelQueries","unlisted":false},{"type":"link","label":"ensureInfiniteQueryData()","href":"/openapi-qraft/docs/query-client/ensureInfiniteQueryData","docId":"query-client/ensureInfiniteQueryData","unlisted":false},{"type":"link","label":"ensureQueryData()","href":"/openapi-qraft/docs/query-client/ensureQueryData","docId":"query-client/ensureQueryData","unlisted":false},{"type":"link","label":"fetchInfiniteQuery()","href":"/openapi-qraft/docs/query-client/fetchInfiniteQuery","docId":"query-client/fetchInfiniteQuery","unlisted":false},{"type":"link","label":"fetchQuery()","href":"/openapi-qraft/docs/query-client/fetchQuery","docId":"query-client/fetchQuery","unlisted":false},{"type":"link","label":"getInfiniteQueryData()","href":"/openapi-qraft/docs/query-client/getInfiniteQueryData","docId":"query-client/getInfiniteQueryData","unlisted":false},{"type":"link","label":"getInfiniteQueryKey()","href":"/openapi-qraft/docs/query-client/getInfiniteQueryKey","docId":"query-client/getInfiniteQueryKey","unlisted":false},{"type":"link","label":"getInfiniteQueryState()","href":"/openapi-qraft/docs/query-client/getInfiniteQueryState","docId":"query-client/getInfiniteQueryState","unlisted":false},{"type":"link","label":"getMutationKey()","href":"/openapi-qraft/docs/query-client/getMutationKey","docId":"query-client/getMutationKey","unlisted":false},{"type":"link","label":"getQueriesData()","href":"/openapi-qraft/docs/query-client/getQueriesData","docId":"query-client/getQueriesData","unlisted":false},{"type":"link","label":"getQueryData()","href":"/openapi-qraft/docs/query-client/getQueryData","docId":"query-client/getQueryData","unlisted":false},{"type":"link","label":"getQueryKey()","href":"/openapi-qraft/docs/query-client/getQueryKey","docId":"query-client/getQueryKey","unlisted":false},{"type":"link","label":"getQueryState()","href":"/openapi-qraft/docs/query-client/getQueryState","docId":"query-client/getQueryState","unlisted":false},{"type":"link","label":"invalidateQueries()","href":"/openapi-qraft/docs/query-client/invalidateQueries","docId":"query-client/invalidateQueries","unlisted":false},{"type":"link","label":"isFetching()","href":"/openapi-qraft/docs/query-client/isFetching","docId":"query-client/isFetching","unlisted":false},{"type":"link","label":"isMutating()","href":"/openapi-qraft/docs/query-client/isMutating","docId":"query-client/isMutating","unlisted":false},{"type":"link","label":"prefetchInfiniteQuery()","href":"/openapi-qraft/docs/query-client/prefetchInfiniteQuery","docId":"query-client/prefetchInfiniteQuery","unlisted":false},{"type":"link","label":"prefetchQuery()","href":"/openapi-qraft/docs/query-client/prefetchQuery","docId":"query-client/prefetchQuery","unlisted":false},{"type":"link","label":"refetchQueries()","href":"/openapi-qraft/docs/query-client/refetchQueries","docId":"query-client/refetchQueries","unlisted":false},{"type":"link","label":"removeQueries()","href":"/openapi-qraft/docs/query-client/removeQueries","docId":"query-client/removeQueries","unlisted":false},{"type":"link","label":"resetQueries()","href":"/openapi-qraft/docs/query-client/resetQueries","docId":"query-client/resetQueries","unlisted":false},{"type":"link","label":"setInfiniteQueryData()","href":"/openapi-qraft/docs/query-client/setInfiniteQueryData","docId":"query-client/setInfiniteQueryData","unlisted":false},{"type":"link","label":"setQueriesData()","href":"/openapi-qraft/docs/query-client/setQueriesData","docId":"query-client/setQueriesData","unlisted":false},{"type":"link","label":"setQueryData()","href":"/openapi-qraft/docs/query-client/setQueryData","docId":"query-client/setQueryData","unlisted":false}]},{"type":"link","label":"Migrating to v2","href":"/openapi-qraft/docs/migrating-to-openapi-qraft-v2","docId":"migrating-to-openapi-qraft-v2","unlisted":false}]},"docs":{"authorization/api-key-authentication":{"id":"authorization/api-key-authentication","title":"API Key Authentication","description":"The SecuritySchemeAPIKey type is used for API key authentication, where the key can be placed in different locations","sidebar":"mainDocsSidebar"},"authorization/basic-authentication":{"id":"authorization/basic-authentication","title":"Basic Authentication","description":"The SecuritySchemeBasic type is used for basic authentication, where credentials are required.","sidebar":"mainDocsSidebar"},"authorization/bearer-authentication":{"id":"authorization/bearer-authentication","title":"Bearer Token Authentication","description":"The SecuritySchemeBearer type supports bearer token authentication, commonly used with JWT tokens. It can either be","sidebar":"mainDocsSidebar"},"authorization/cookie-authentication":{"id":"authorization/cookie-authentication","title":"Cookie Authentication","description":"The SecuritySchemeCookie type is used for cookie-based authentication, where the secret is placed in a cookie.","sidebar":"mainDocsSidebar"},"authorization/qraft-secure-request-fn":{"id":"authorization/qraft-secure-request-fn","title":"QraftSecureRequestFn","description":"The ` component is used to provide SecurityScheme` handlers.","sidebar":"mainDocsSidebar"},"codegen/CLI/cli":{"id":"codegen/CLI/cli","title":"OpenAPI Qraft CLI","description":"OpenAPI Qraft CLI is a command-line utility that generates API schemas and interfaces for the @openapi-qraft/react.","sidebar":"mainDocsSidebar"},"codegen/CLI/create-predefined-parameters-request-fn":{"id":"codegen/CLI/create-predefined-parameters-request-fn","title":"Predefined operation parameters","description":"The file create-predefined-parameters-request-fn.ts will be generated by the @openapi-qraft/cli when the --operation-predefined-parameters option is used.","sidebar":"mainDocsSidebar"},"codegen/create-api-client-function":{"id":"codegen/create-api-client-function","title":"createAPIClient(...)","description":"Qraft CLI generates a helper function createAPIClient(...), which creates a Qraft API client with","sidebar":"mainDocsSidebar"},"core/mutation-operation":{"id":"core/mutation-operation","title":"POST, PUT, PATCH, DELETE","description":"The method allows you to execute a Mutations without TanStack\'s QueryClient.","sidebar":"mainDocsSidebar"},"core/query-operation":{"id":"core/query-operation","title":"GET, HEAD, OPTIONS","description":"The method allows you to execute a Queries without TanStack\'s QueryClient.","sidebar":"mainDocsSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation","description":"To start using OpenAPI Qraft, you\'ll need to install two packages:","sidebar":"mainDocsSidebar"},"getting-started/quick-start":{"id":"getting-started/quick-start","title":"Quick Start","description":"To get started with OpenAPI Qraft, you\'ll need to generate types from your OpenAPI Document","sidebar":"mainDocsSidebar"},"hooks/useInfiniteQuery":{"id":"hooks/useInfiniteQuery","title":"useInfiniteQuery(...)","description":"The Hook enables you to perform asynchronous data fetching operations with support for infinite scrolling scenarios.","sidebar":"mainDocsSidebar"},"hooks/useIsFetching":{"id":"hooks/useIsFetching","title":"useIsFetching(...)","description":"The Hook enables you to monitor the number of queries,","sidebar":"mainDocsSidebar"},"hooks/useIsMutating":{"id":"hooks/useIsMutating","title":"useIsMutating(...)","description":"The optional hook that returns the number of mutations that your","sidebar":"mainDocsSidebar"},"hooks/useMutation":{"id":"hooks/useMutation","title":"useMutation()","description":"The Hook enables you to perform asynchronous data mutation operations, such as POST, PUT, PATCH, or DELETE requests.","sidebar":"mainDocsSidebar"},"hooks/useMutationState":{"id":"hooks/useMutationState","title":"useMutationState(...)","description":"The Hook offers a way to access the state of a mutation,","sidebar":"mainDocsSidebar"},"hooks/useQueries":{"id":"hooks/useQueries","title":"useQueries(...)","description":"The Hook enables you to concurrently execute multiple asynchronous data fetching operations.","sidebar":"mainDocsSidebar"},"hooks/useQuery":{"id":"hooks/useQuery","title":"useQuery(...)","description":"The Hook enables you to perform asynchronous data fetching operations.","sidebar":"mainDocsSidebar"},"hooks/useSuspenseInfiniteQuery":{"id":"hooks/useSuspenseInfiniteQuery","title":"useSuspenseInfiniteQuery(...)","description":"The Hook enables you to perform asynchronous data fetching operations with support for infinite scrolling scenarios.","sidebar":"mainDocsSidebar"},"hooks/useSuspenseQueries":{"id":"hooks/useSuspenseQueries","title":"useSuspenseQueries(...)","description":"See the useSuspenseQueries(...) \ud83c\udf34 documentation.","sidebar":"mainDocsSidebar"},"hooks/useSuspenseQuery":{"id":"hooks/useSuspenseQuery","title":"useSuspenseQuery(...)","description":"See the useSuspenseQuery(...) \ud83c\udf34 documentation.","sidebar":"mainDocsSidebar"},"migrating-to-openapi-qraft-v2":{"id":"migrating-to-openapi-qraft-v2","title":"Migrating to OpenAPI Qraft v2","description":"This guide outlines the steps required to migrate your project from OpenAPI Qraft v1 to v2.","sidebar":"mainDocsSidebar"},"overview":{"id":"overview","title":"Overview","description":"OpenAPI Qraft is a powerful library for creating type-safe API Hooks in React applications from","sidebar":"mainDocsSidebar"},"query-client/cancelQueries":{"id":"query-client/cancelQueries","title":"cancelQueries(...)","description":"The method can be used to cancel outgoing queries. Refer to the TanStack","sidebar":"mainDocsSidebar"},"query-client/ensureInfiniteQueryData":{"id":"query-client/ensureInfiniteQueryData","title":"ensureInfiniteQueryData(...)","description":"The ensureInfiniteQueryData method is designed to fetch or retrieve cached data for an infinite query.","sidebar":"mainDocsSidebar"},"query-client/ensureQueryData":{"id":"query-client/ensureQueryData","title":"ensureQueryData(...)","description":"The ensureQueryData method retrieves cached data for a given query or fetches it if the data is not already available","sidebar":"mainDocsSidebar"},"query-client/fetchInfiniteQuery":{"id":"query-client/fetchInfiniteQuery","title":"fetchInfiniteQuery(...)","description":"The method facilitates the fetching of paginated data.","sidebar":"mainDocsSidebar"},"query-client/fetchQuery":{"id":"query-client/fetchQuery","title":"fetchQuery(...)","description":"The method allows you to execute a Queries without React Hooks with the full power of QueryClient.","sidebar":"mainDocsSidebar"},"query-client/getInfiniteQueryData":{"id":"query-client/getInfiniteQueryData","title":"getInfiniteQueryData(...)","description":"The method enables direct access to the QueryClient cache to retrieve the data for a specific InfiniteQuery.","sidebar":"mainDocsSidebar"},"query-client/getInfiniteQueryKey":{"id":"query-client/getInfiniteQueryKey","title":"getInfiniteQueryKey(...)","description":"The method provides a standardized way to generate QueryKey the Infinite Queries.","sidebar":"mainDocsSidebar"},"query-client/getInfiniteQueryState":{"id":"query-client/getInfiniteQueryState","title":"getInfiniteQueryState(...)","description":"The method is the same as the getQueryState method, but for infinite queries.","sidebar":"mainDocsSidebar"},"query-client/getMutationKey":{"id":"query-client/getMutationKey","title":"getMutationKey(...)","description":"The method provides a standardized way to generate MutationKey for Mutations.","sidebar":"mainDocsSidebar"},"query-client/getQueriesData":{"id":"query-client/getQueriesData","title":"getQueriesData(...)","description":"The getQueriesData() method enables direct access to the QueryClient cache to retrieve data for multiple queries that match specified filters. This method is particularly useful when you need to access data from multiple related queries at once.","sidebar":"mainDocsSidebar"},"query-client/getQueryData":{"id":"query-client/getQueryData","title":"getQueryData(...)","description":"The method enables direct access to the QueryClient cache to retrieve the data for a specific Query.","sidebar":"mainDocsSidebar"},"query-client/getQueryKey":{"id":"query-client/getQueryKey","title":"getQueryKey(...)","description":"The method provides a standardized way to generate QueryKey for Queries.","sidebar":"mainDocsSidebar"},"query-client/getQueryState":{"id":"query-client/getQueryState","title":"getQueryState(...)","description":"See the TanStack","sidebar":"mainDocsSidebar"},"query-client/invalidateQueries":{"id":"query-client/invalidateQueries","title":"invalidateQueries(...)","description":"The method programmatically invalidates cached data within the QueryClient.","sidebar":"mainDocsSidebar"},"query-client/isFetching":{"id":"query-client/isFetching","title":"isFetching(...)","description":"This method returns an integer representing how many queries, if any, in the cache are currently fetching.","sidebar":"mainDocsSidebar"},"query-client/isMutating":{"id":"query-client/isMutating","title":"isMutating(...)","description":"This method returns an integer representing how many mutations are currently in the loading state.","sidebar":"mainDocsSidebar"},"query-client/prefetchInfiniteQuery":{"id":"query-client/prefetchInfiniteQuery","title":"prefetchInfiniteQuery(...)","description":"The method facilitates the fetching of paginated data.","sidebar":"mainDocsSidebar"},"query-client/prefetchQuery":{"id":"query-client/prefetchQuery","title":"prefetchQuery(...)","description":"The method allows you to fetch data and cache it before it\'s needed.","sidebar":"mainDocsSidebar"},"query-client/refetchQueries":{"id":"query-client/refetchQueries","title":"refetchQueries(...)","description":"The method can be used to refetch queries based on certain conditions.","sidebar":"mainDocsSidebar"},"query-client/removeQueries":{"id":"query-client/removeQueries","title":"removeQueries(...)","description":"The method can be used to remove queries. Refer to the TanStack","sidebar":"mainDocsSidebar"},"query-client/resetQueries":{"id":"query-client/resetQueries","title":"resetQueries(...)","description":"The function is used to refetch a list of queries by their keys.","sidebar":"mainDocsSidebar"},"query-client/setInfiniteQueryData":{"id":"query-client/setInfiniteQueryData","title":"setInfiniteQueryData(...)","description":"The method enables direct access to the QueryClient cache to set the data for a specific Infinite Query.","sidebar":"mainDocsSidebar"},"query-client/setQueriesData":{"id":"query-client/setQueriesData","title":"setQueriesData(...)","description":"The synchronous function that can be used to immediately update cached data of multiple queries by using filter.","sidebar":"mainDocsSidebar"},"query-client/setQueryData":{"id":"query-client/setQueryData","title":"setQueryData(...)","description":"The method enables direct access to the QueryClient cache to set the data for a specific Query.","sidebar":"mainDocsSidebar"}}}}')}}]);