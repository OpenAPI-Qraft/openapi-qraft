"use strict";(self.webpackChunkopenapi_qraft_website=self.webpackChunkopenapi_qraft_website||[]).push([[6409],{6887:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>u,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var r=s(2540),t=s(3023);const i={sidebar_label:"useSuspenseQueries()"},u="useSuspenseQueries(...)",o={id:"hooks/useSuspenseQueries",title:"useSuspenseQueries(...)",description:"See the useSuspenseQueries(...) \ud83c\udf34 documentation.",source:"@site/docs/hooks/useSuspenseQueries.mdx",sourceDirName:"hooks",slug:"/hooks/useSuspenseQueries",permalink:"/openapi-qraft/docs/hooks/useSuspenseQueries",draft:!1,unlisted:!1,editUrl:"https://github.com/OpenAPI-Qraft/openapi-qraft/edit/main/website/docs/hooks/useSuspenseQueries.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"useSuspenseQueries()"},sidebar:"mainDocsSidebar",previous:{title:"useSuspenseInfiniteQuery()",permalink:"/openapi-qraft/docs/hooks/useSuspenseInfiniteQuery"},next:{title:"useSuspenseQuery()",permalink:"/openapi-qraft/docs/hooks/useSuspenseQuery"}},l={},c=[{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3}];function a(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"usesuspensequeries",children:"useSuspenseQueries(...)"}),"\n",(0,r.jsxs)(n.p,{children:["See the ",(0,r.jsx)(n.a,{href:"https://tanstack.com/query/latest/docs/framework/react/reference/useSuspenseQueries",children:(0,r.jsx)(n.em,{children:"useSuspenseQueries(...) \ud83c\udf34"})})," documentation."]}),"\n",(0,r.jsxs)(n.p,{children:["The Hook enables you to concurrently execute multiple asynchronous data fetching operations.\nThe functionality is similar to the ",(0,r.jsx)(n.a,{href:"/openapi-qraft/docs/hooks/useQueries",children:(0,r.jsx)(n.em,{children:"useQueries"})})," hook, but with the added benefit of Suspense support.\nFor more detailed information, explore the TanStack\n",(0,r.jsx)(n.a,{href:"https://tanstack.com/query/latest/docs/framework/react/reference/useSuspenseQueries",children:(0,r.jsx)(n.em,{children:"useSuspenseQueries(...) \ud83c\udf34"})})," documentation."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const result = qraft.<service>.<operation>.useSuspenseQueries(\n  options,\n  queryClient\n)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"options: UseQueriesOptions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Required"}),", represents the options for queries, see ",(0,r.jsx)(n.a,{href:"https://tanstack.com/query/latest/docs/framework/react/reference/useSuspenseQueries",children:(0,r.jsx)(n.em,{children:"useSuspenseQueries(...) \ud83c\udf34"})})," documentation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"options.queries: QueryOptions[]"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Required"})," array of ",(0,r.jsx)(n.em,{children:"Queries"})," to be executed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"parameters: { path, query, header }"})," will be used for the request"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"queryKey: QueryKey"})," will be used for the request instead of the ",(0,r.jsx)(n.code,{children:"parameters"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"queryKey"})," and ",(0,r.jsx)(n.code,{children:"parameters"})," are mutually exclusive"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"options.combine?: (result: UseQueriesResults) => TCombinedResult"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optional"}),", a function to select the data from the mutation"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"queryClient?: QueryClient"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optional"})," ",(0,r.jsx)(n.a,{href:"https://tanstack.com/query/latest/docs/reference/QueryClient",children:(0,r.jsx)(n.em,{children:"QueryClient \ud83c\udf34"})})," to be used"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"If not provided"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"QraftContext.queryClient"})," will be used if available"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://tanstack.com/query/latest/docs/framework/react/reference/useQueryClient",children:(0,r.jsx)(n.em,{children:"useQueryClient() \ud83c\udf34"})}),"\nresult will be used as a fallback"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:"Array with all the query results. The order returned is the same as the input order."}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",metastring:'title="src/Entities.tsx"',children:"import { Suspense } from 'react'\nimport { createAPIClient } from './api'; // generated by OpenAPI Qraft\n\nconst qraft = createAPIClient();\n\nfunction Entities() {\n  /**\n   * Initiates two GET requests for entity details:\n   * ###\n   * GET /entities/3e3e-3e3e-3e3e\n   * x-monite-version: 2023-09-01\n   * ###\n   * GET /entities/5c5c-5c5c-5c5c\n   * x-monite-version: 2023-09-01\n   **/\n  const entities = qraft.entities.getEntities.useSuspenseQueries({\n    queries: [\n      {\n        parameters: {\n          header: {\n            'x-monite-version': '2023-09-01',\n          },\n          path: {\n            entity_id: '3e3e-3e3e-3e3e',\n          },\n        },\n      },\n      {\n        parameters: {\n          header: {\n            'x-monite-version': '2023-09-01',\n          },\n          path: {\n            entity_id: '5c5c-5c5c-5c5c',\n          },\n        },\n      },\n    ],\n    combine: (results) => results.map((result) => result.data),\n  });\n\n  return (\n    <p>\n      {entities.map(({id}) => id).join(', ')}\n    </p>\n  )\n}\n\nexport default function() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Entities />\n    </Suspense>\n  )\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},3023:(e,n,s)=>{s.d(n,{R:()=>u,x:()=>o});var r=s(3696);const t={},i=r.createContext(t);function u(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:u(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);