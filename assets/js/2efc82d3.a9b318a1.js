"use strict";(self.webpackChunkopenapi_qraft_website=self.webpackChunkopenapi_qraft_website||[]).push([[1476],{9091:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>u,toc:()=>c});var s=t(2540),r=t(3023);const i={sidebar_label:"useQueries()"},o="useQueries(...)",u={id:"hooks/useQueries",title:"useQueries(...)",description:"The Hook enables you to concurrently execute multiple asynchronous data fetching operations.",source:"@site/docs/hooks/useQueries.mdx",sourceDirName:"hooks",slug:"/hooks/useQueries",permalink:"/openapi-qraft/docs/next/hooks/useQueries",draft:!1,unlisted:!1,editUrl:"https://github.com/OpenAPI-Qraft/openapi-qraft/edit/main/website/docs/hooks/useQueries.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"useQueries()"},sidebar:"mainDocsSidebar",previous:{title:"useMutationState()",permalink:"/openapi-qraft/docs/next/hooks/useMutationState"},next:{title:"useSuspenseInfiniteQuery()",permalink:"/openapi-qraft/docs/next/hooks/useSuspenseInfiniteQuery"}},a={},c=[{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"usequeries",children:"useQueries(...)"})}),"\n",(0,s.jsxs)(n.p,{children:["The Hook enables you to concurrently execute multiple asynchronous data fetching operations.\nFor more detailed information, explore the TanStack\n",(0,s.jsx)(n.a,{href:"https://tanstack.com/query/latest/docs/framework/react/reference/useQueries",children:(0,s.jsx)(n.em,{children:"useQueries(...) \ud83c\udf34"})})," documentation."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const queries = api.<service>.<operation>.useQueries(\n  options\n)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"options: UseQueriesOptions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Required"}),", represents the options for queries, see ",(0,s.jsx)(n.a,{href:"https://tanstack.com/query/latest/docs/framework/react/reference/useQueries",children:(0,s.jsx)(n.em,{children:"useQueries(...) \ud83c\udf34"})})," documentation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"options.queries: QueryOptions[]"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Required"})," array of ",(0,s.jsx)(n.em,{children:"Queries"})," to be executed"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"parameters: { path, query, header }"})," will be used for the request"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"queryKey: QueryKey"})," will be used for the request instead of the ",(0,s.jsx)(n.code,{children:"parameters"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"queryKey"})," and ",(0,s.jsx)(n.code,{children:"parameters"})," are mutually exclusive"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"options.combine?: (result: UseQueriesResults) => TCombinedResult"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Optional"}),", a function to select the data from the mutation"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["Array with all the ",(0,s.jsx)(n.code,{children:"Queries"}),". The order returned is the same as the input order."]}),"\n",(0,s.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { createAPIClient } from './api'; // generated by OpenAPI Qraft\n\nimport { requestFn } from '@openapi-qraft/react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n\nconst queryClient = new QueryClient();\n\nconst api = createAPIClient({\n  requestFn,\n  queryClient,\n  baseUrl: 'https://api.sandbox.monite.com/v1',\n});\n\nconst useEntityQueries = () => {\n  /**\n   * Initiates two concurrent GET requests:\n   * ###\n   * GET /entities/3e3e-3e3e-3e3e\n   * x-monite-version: 2023-09-01\n   * ###\n   * GET /entities/5c5c-5c5c-5c5c\n   * x-monite-version: 2023-09-01\n   **/\n  return api.entities.getEntities.useQueries({\n    queries: [\n      {\n        parameters: {\n          header: {\n            'x-monite-version': '2023-09-01',\n          },\n          path: {\n            entity_id: '3e3e-3e3e-3e3e',\n          },\n        },\n      },\n      {\n        parameters: {\n          header: {\n            'x-monite-version': '2023-09-01',\n          },\n          path: {\n            entity_id: '5c5c-5c5c-5c5c',\n          },\n        },\n      },\n    ],\n    combine: (results) => results.map((result) => result.data),\n  });\n}\n\n// const EntityComponentWithUseEntityQueries = () => { ... }\n\nexport default function() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      {/*<EntityComponentWithUseEntityQueries />*/}\n    </QueryClientProvider>\n  );\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},3023:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>u});var s=t(3696);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function u(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);