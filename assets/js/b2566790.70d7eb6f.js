"use strict";(self.webpackChunkopenapi_qraft_website=self.webpackChunkopenapi_qraft_website||[]).push([[80],{7477:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>o});var r=t(2540),i=t(3023);const s={sidebar_label:"fetchInfiniteQuery"},l="fetchInfiniteQuery(...)",c={id:"query-client/fetchInfiniteQuery",title:"fetchInfiniteQuery(...)",description:"The method facilitates the fetching of paginated data.",source:"@site/docs/query-client/fetchInfiniteQuery.mdx",sourceDirName:"query-client",slug:"/query-client/fetchInfiniteQuery",permalink:"/openapi-qraft/docs/query-client/fetchInfiniteQuery",draft:!1,unlisted:!1,editUrl:"https://github.com/OpenAPI-Qraft/openapi-qraft/edit/main/website/docs/query-client/fetchInfiniteQuery.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"fetchInfiniteQuery"},sidebar:"mainDocsSidebar",previous:{title:"useQueries",permalink:"/openapi-qraft/docs/hooks/useQueries"},next:{title:"fetchQuery",permalink:"/openapi-qraft/docs/query-client/fetchQuery"}},a={},o=[{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3}];function d(e){const n={a:"a",code:"code",del:"del",em:"em",h1:"h1",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"fetchinfinitequery",children:"fetchInfiniteQuery(...)"}),"\n",(0,r.jsxs)(n.p,{children:["The method facilitates the fetching of paginated data.\nSee TanStack ",(0,r.jsx)(n.a,{href:"https://tanstack.com/query/latest/docs/reference/QueryClient#queryclientfetchinfinitequery",children:(0,r.jsx)(n.em,{children:"queryClient.fetchInfiniteQuery \ud83c\udf34"})}),"\ndocumentation for more details."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const result = qraft.<service>.<operation>.fetchInfiniteQuery(\n  {\n    parameters,\n    requestFn,\n    baseUrl,\n    ...fetchInfiniteQueryOptions,\n  },\n  queryClient\n);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"parameters: Record<'path' | 'query' | 'header', Record<string, any>> | QueryKey | {}"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Required"}),", OpenAPI request parameters for the query, strictly-typed \u2728"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"parameters"})," will be used to generate the ",(0,r.jsx)(n.code,{children:"QueryKey"})]}),"\n",(0,r.jsxs)(n.li,{children:["If operation does not require parameters, you must pass an empty object ",(0,r.jsx)(n.code,{children:"{}"})," for strictness"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"requestFn: RequestFn"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optional"}),", a function that will be used to execute the request"]}),"\n",(0,r.jsxs)(n.li,{children:["The function should be provided, otherwise it will throw an error if default ",(0,r.jsx)(n.code,{children:"queryFn"})," is not set previously using ",(0,r.jsx)(n.code,{children:"QueryClient.setDefaultOptions(...)"})," method"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"baseUrl: string"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Required if ",(0,r.jsx)(n.code,{children:"requestFn"})," is set"]}),", the base URL of the API"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fetchInfiniteQueryOptions?: FetchInfiniteQueryOptions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Optional"}),", represents the rest options of the ",(0,r.jsx)(n.a,{href:"https://tanstack.com/query/latest/docs/reference/QueryClient#queryclientfetchinfinitequery",children:(0,r.jsx)(n.em,{children:"fetchInfiniteQuery(...) \ud83c\udf34"})})," method","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"queryOptions.queryFn"})," could be provided instead of ",(0,r.jsx)(n.del,{children:(0,r.jsx)(n.code,{children:"requestFn"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"queryOptions.queryKey"})," could be provided instead of ",(0,r.jsx)(n.del,{children:(0,r.jsx)(n.code,{children:"parameters"})})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"queryClient: QueryClient"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Required"})," ",(0,r.jsx)(n.a,{href:"https://tanstack.com/query/latest/docs/reference/QueryClient",children:(0,r.jsx)(n.em,{children:"QueryClient \ud83c\udf34"})})," to be used"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:"If not provided"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"QraftContext.queryClient"})," will be used if available"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://tanstack.com/query/latest/docs/framework/react/reference/useQueryClient",children:(0,r.jsx)(n.em,{children:"useQueryClient() \ud83c\udf34"})}),"\nresult will be used as a fallback"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Promise<InifniteData<T>>"})," - A promise of the paginated data and page parameters"]}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"/**\n * Will execute the initial request:\n * ###\n * GET /posts?limit=10&page=1\n * ###\n * And then will execute the next page request:\n * GET /posts?limit=10&page=2\n **/\nimport { requestFn } from '@openapi-qraft/react';\nimport { QueryClient } from '@tanstack/react-query';\n\nconst queryClient = new QueryClient();\n\nconst posts = qraft.posts.getPosts.fetchInfiniteQuery(\n  {\n    parameters: { query: { limit: 10 } },\n    pages: 2, // How many pages to fetch\n    initialPageParam: {\n      query: { pagination_token: undefined }, // will be used in initial request\n    },\n    getNextPageParam: (lastPage, allPages, lastPageParam) => ({\n      query: { pagination_token: lastPage.next_pagination_token },\n    }),\n    /**\n     * Request function should be provided, otherwise it will throw an error\n     * if default `queryFn` is not set previously using\n     * `QueryClient.setDefaultOptions(...)` method\n     */\n    requestFn: requestFn,\n    baseUrl: 'https://api.sandbox.monite.com/v1', // must be provided if `requestFn` is set\n  },\n  queryClient\n);\n\nconsole.log(\n  posts.pages, // all fetched pages\n  posts.pageParams // all page parameters\n);\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},3023:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>c});var r=t(3696);const i={},s=r.createContext(i);function l(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);