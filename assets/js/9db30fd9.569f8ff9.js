"use strict";(self.webpackChunkopenapi_qraft_website=self.webpackChunkopenapi_qraft_website||[]).push([[8550],{1036:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"hooks/useSuspenseQuery","title":"useSuspenseQuery(...)","description":"See the useSuspenseQuery(...) \ud83c\udf34 documentation.","source":"@site/docs/hooks/useSuspenseQuery.mdx","sourceDirName":"hooks","slug":"/hooks/useSuspenseQuery","permalink":"/openapi-qraft/docs/hooks/useSuspenseQuery","draft":false,"unlisted":false,"editUrl":"https://github.com/OpenAPI-Qraft/openapi-qraft/edit/main/website/docs/hooks/useSuspenseQuery.mdx","tags":[],"version":"current","frontMatter":{"sidebar_label":"useSuspenseQuery()"},"sidebar":"mainDocsSidebar","previous":{"title":"useSuspenseQueries()","permalink":"/openapi-qraft/docs/hooks/useSuspenseQueries"},"next":{"title":"cancelQueries()","permalink":"/openapi-qraft/docs/query-client/cancelQueries"}}');var t=s(2540),o=s(3023);const i={sidebar_label:"useSuspenseQuery()"},a="useSuspenseQuery(...)",u={},c=[{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"usesuspensequery",children:"useSuspenseQuery(...)"})}),"\n",(0,t.jsxs)(n.p,{children:["See the ",(0,t.jsx)(n.a,{href:"https://tanstack.com/query/latest/docs/framework/react/reference/useSuspenseQuery",children:(0,t.jsx)(n.em,{children:"useSuspenseQuery(...) \ud83c\udf34"})})," documentation."]}),"\n",(0,t.jsxs)(n.p,{children:["The Hook enables you to perform asynchronous data fetching operations,\nsimilar to ",(0,t.jsx)(n.a,{href:"/openapi-qraft/docs/hooks/useQuery",children:(0,t.jsx)(n.em,{children:"useQuery"})})," Hook, but with the added benefit of Suspense support.\nSee the TanStack ",(0,t.jsx)(n.a,{href:"https://tanstack.com/query/latest/docs/framework/react/reference/useSuspenseQuery",children:(0,t.jsx)(n.em,{children:"useSuspenseQuery(...) \ud83c\udf34"})}),"\ndocumentation for more details."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const result = api.<service>.<operation>.useSuspenseQuery(\n  parameters,\n  queryOptions\n)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"parameters: { path, query, header } | QueryKey | void"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Required only if OpenAPI specification defines required parameters"})}),"\n",(0,t.jsx)(n.li,{children:"If the operation has no required parameters according to OpenAPI, you can omit this argument"}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"parameters"})," will be used to generate the ",(0,t.jsx)(n.code,{children:"QueryKey"})]}),"\n",(0,t.jsxs)(n.li,{children:["Instead of an object with ",(0,t.jsx)(n.code,{children:"{path, query, header}"}),", you can pass a ",(0,t.jsx)(n.code,{children:"QueryKey"})," as an array\nwhich is also strictly-typed \u2728"]}),"\n",(0,t.jsxs)(n.li,{children:["If operation does not require parameters, you must pass an empty object ",(0,t.jsx)(n.code,{children:"{}"})," for strictness"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"queryOptions?: UseQueryOptions"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Optional"}),", represents the options of the ",(0,t.jsx)(n.a,{href:"https://tanstack.com/query/latest/docs/framework/react/reference/useSuspenseQuery",children:(0,t.jsx)(n.em,{children:"useSuspenseQuery(...) \ud83c\udf34"})})," Hook","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"queryOptions.queryFn"})," could be provided to override the default ",(0,t.jsx)(n.code,{children:"queryFn"})," used by Qraft"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"returns",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"TData"})," - the result from the query"]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["By default, ",(0,t.jsx)(n.code,{children:"useSuspenseQuery"})," hooks are only generated for read operations (",(0,t.jsx)(n.em,{children:"GET"})," method). If you want to use query\nhooks for write operations (",(0,t.jsx)(n.em,{children:"POST"}),", ",(0,t.jsx)(n.em,{children:"PUT"}),", ",(0,t.jsx)(n.em,{children:"PATCH"})," methods), use the ",(0,t.jsx)(n.code,{children:"--queryable-write-operations"})," CLI option\nduring code generation."]})}),"\n",(0,t.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",metastring:'title="src/ApprovalPolicyName.tsx"',children:"import  { Suspense } from 'react';\nimport { createAPIClient } from './api'; // generated by OpenAPI Qraft CLI\n\nimport { requestFn } from '@openapi-qraft/react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n\nconst queryClient = new QueryClient();\n\nconst api = createAPIClient({\n  requestFn,\n  queryClient,\n  baseUrl: 'https://api.sandbox.monite.com/v1',\n});\n\nfunction ApprovalPolicyName() {\n  /**\n   * `<service>.<operation>.useSuspenseQuery(...)` initiates\n   * the request for data retrieval:\n   * ###\n   * GET /approval_policies/321?items_order=asc&items_order=desc\n   * x-monite-version: 1.0.0\n   */\n  const approvalPolicy =\n    api.approvalPolicies.getApprovalPoliciesId.useSuspenseQuery(\n      {\n        header: {\n          \"x-monite-version\": \"1.0.0\",\n        },\n        path: {\n          approval_policy_id: \"123\",\n        },\n        query: {\n          items_order: [\"asc\", \"desc\"],\n        },\n      },\n    );\n\n  return <div>Approval Policy: {approvalPolicy.name}</div>;\n}\n\nexport default function() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Suspense fallback={<div>Loading...</div>}>\n        <ApprovalPolicyName />\n      </Suspense>\n    </QueryClientProvider>\n  );\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},3023:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var r=s(3696);const t={},o=r.createContext(t);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);