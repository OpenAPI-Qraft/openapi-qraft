"use strict";(self.webpackChunkopenapi_qraft_website=self.webpackChunkopenapi_qraft_website||[]).push([[6191],{9393:(e,t,n)=>{n.d(t,{A:()=>i});n(3696);var r=n(1750);const s={tabItem:"tabItem_wHwb"};var l=n(2540);function i(e){let{children:t,hidden:n,className:i}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,i),hidden:n,children:t})}},9942:(e,t,n)=>{n.d(t,{A:()=>g});var r=n(3696),s=n(1750),l=n(5162),i=n(9519),a=n(5367),u=n(271),o=n(5476),c=n(5095);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:s}}=e;return{value:t,label:n,attributes:r,default:s}}))}(n);return function(e){const t=(0,o.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function f(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:n}=e;const s=(0,i.W6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,u.aZ)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(s.location.search);t.set(l,e),s.replace({...s.location,search:t.toString()})}),[l,s])]}function y(e){const{defaultValue:t,queryString:n=!1,groupId:s}=e,l=h(e),[i,u]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!f({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:l}))),[o,d]=p({queryString:n,groupId:s}),[y,m]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,l]=(0,c.Dv)(n);return[s,(0,r.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:s}),x=(()=>{const e=o??y;return f({value:e,tabValues:l})?e:null})();(0,a.A)((()=>{x&&u(x)}),[x]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!f({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);u(e),d(e),m(e)}),[d,m,l]),tabValues:l}}var m=n(1173);const x={tabList:"tabList_J5MA",tabItem:"tabItem_l0OV"};var j=n(2540);function b(e){let{className:t,block:n,selectedValue:r,selectValue:i,tabValues:a}=e;const u=[],{blockElementScrollPositionUntilNextRender:o}=(0,l.a_)(),c=e=>{const t=e.currentTarget,n=u.indexOf(t),s=a[n].value;s!==r&&(o(t),i(s))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},t),children:a.map((e=>{let{value:t,label:n,attributes:l}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>u.push(e),onKeyDown:d,onClick:c,...l,className:(0,s.A)("tabs__item",x.tabItem,l?.className,{"tabs__item--active":r===t}),children:n??t},t)}))})}function q(e){let{lazy:t,children:n,selectedValue:s}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===s));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function v(e){const t=y(e);return(0,j.jsxs)("div",{className:(0,s.A)("tabs-container",x.tabList),children:[(0,j.jsx)(b,{...t,...e}),(0,j.jsx)(q,{...t,...e})]})}function g(e){const t=(0,m.A)();return(0,j.jsx)(v,{...e,children:d(e.children)},String(t))}},8952:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>f,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var r=n(2540),s=n(3023),l=n(9942),i=n(9393);const a={sidebar_label:"fetchQuery()"},u="fetchQuery(...)",o={id:"query-client/fetchQuery",title:"fetchQuery(...)",description:"The method allows you to execute a Queries without React Hooks with the full power of QueryClient.",source:"@site/docs/query-client/fetchQuery.mdx",sourceDirName:"query-client",slug:"/query-client/fetchQuery",permalink:"/openapi-qraft/docs/query-client/fetchQuery",draft:!1,unlisted:!1,editUrl:"https://github.com/OpenAPI-Qraft/openapi-qraft/edit/main/website/docs/query-client/fetchQuery.mdx",tags:[],version:"current",frontMatter:{sidebar_label:"fetchQuery()"},sidebar:"mainDocsSidebar",previous:{title:"fetchInfiniteQuery()",permalink:"/openapi-qraft/docs/query-client/fetchInfiniteQuery"},next:{title:"getInfiniteQueryData()",permalink:"/openapi-qraft/docs/query-client/getInfiniteQueryData"}},c={},d=[{value:"Arguments",id:"arguments",level:3},{value:"Returns",id:"returns",level:3},{value:"Examples",id:"examples",level:3}];function h(e){const t={a:"a",code:"code",del:"del",em:"em",h1:"h1",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",span:"span",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"fetchquery",children:"fetchQuery(...)"}),"\n",(0,r.jsxs)(t.p,{children:["The method allows you to execute a ",(0,r.jsx)(t.em,{children:"Queries"})," without React Hooks with the full power of ",(0,r.jsx)(t.em,{children:"QueryClient"}),".\nTo understand how ",(0,r.jsx)(t.code,{children:"fetchQuery"})," handles data and cache management,\nrefer to the TanStack ",(0,r.jsx)(t.a,{href:"https://tanstack.com/query/latest/docs/reference/QueryClient#queryclientfetchquery",children:(0,r.jsx)(t.em,{children:"queryClient.fetchQuery \ud83c\udf34"})})," documentation."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"const result = qraft.<service>.<operation>.fetchQuery(\n  {\n    parameters,\n    requestFn,\n    baseUrl,\n    ...fetchQueryOptions,\n  },\n  queryClient\n);\n"})}),"\n",(0,r.jsx)(t.h3,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"parameters: { path, query, header } | QueryKey | {}"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Required"}),", OpenAPI request parameters for the query, strictly-typed \u2728"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"parameters"})," will be used to generate the ",(0,r.jsx)(t.code,{children:"QueryKey"})]}),"\n",(0,r.jsxs)(t.li,{children:["If operation does not require parameters, you must pass an empty object ",(0,r.jsx)(t.code,{children:"{}"})," for strictness"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"requestFn: RequestFn"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Optional"}),", a function that will be used to execute the request"]}),"\n",(0,r.jsxs)(t.li,{children:["The function should be provided, otherwise it will throw an error if default ",(0,r.jsx)(t.code,{children:"queryFn"})," is not set previously using ",(0,r.jsx)(t.code,{children:"QueryClient.setDefaultOptions(...)"})," method"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"baseUrl: string"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsxs)(t.strong,{children:["Required if ",(0,r.jsx)(t.code,{children:"requestFn"})," is set"]}),", the base URL of the API"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"...fetchQueryOptions?: FetchQueryOptions"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Optional"}),", represents the rest options of the ",(0,r.jsx)(t.a,{href:"https://tanstack.com/query/latest/docs/reference/QueryClient#queryclientfetchquery",children:(0,r.jsx)(t.em,{children:"fetchQuery(...) \ud83c\udf34"})})," method","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"queryOptions.queryFn"})," could be provided instead of ",(0,r.jsx)(t.del,{children:(0,r.jsx)(t.code,{children:"requestFn"})})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"queryOptions.queryKey"})," could be provided instead of ",(0,r.jsx)(t.del,{children:(0,r.jsx)(t.code,{children:"parameters"})})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:"queryClient: QueryClient"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Required"})," ",(0,r.jsx)(t.a,{href:"https://tanstack.com/query/latest/docs/reference/QueryClient",children:(0,r.jsx)(t.em,{children:"QueryClient \ud83c\udf34"})})," to be used"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.em,{children:"If not provided"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"QraftContext.queryClient"})," will be used if available"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://tanstack.com/query/latest/docs/framework/react/reference/useQueryClient",children:(0,r.jsx)(t.em,{children:"useQueryClient() \ud83c\udf34"})}),"\nresult will be used as a fallback"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"result: Promise<T>"})," - The result of the query execution"]}),"\n",(0,r.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,r.jsxs)(l.A,{children:[(0,r.jsx)(i.A,{value:"example1",label:(0,r.jsxs)(t.span,{style:{verticalAlign:"middle"},children:["With ",(0,r.jsx)(t.code,{children:"requestFn"})]}),default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"/**\n * Will execute the request:\n * ###\n * GET /posts?limit=10\n **/\nimport { requestFn } from '@openapi-qraft/react';\nimport { QueryClient } from '@tanstack/react-query';\n\nconst queryClient = new QueryClient();\n\nconst posts = await qraft.posts.getPosts.fetchQuery(\n  {\n    parameters: { query: { limit: 10 } },\n    /**\n     * Request function should be provided, otherwise it will throw an error\n     * if default `queryFn` is not set previously using\n     * `QueryClient.setDefaultOptions(...)` method\n     */\n    requestFn: requestFn,\n    baseUrl: 'https://api.sandbox.monite.com/v1', // must be provided if `requestFn` is set\n  },\n  queryClient\n);\n"})})}),(0,r.jsx)(i.A,{value:"with-query-fn",label:(0,r.jsxs)(t.span,{style:{verticalAlign:"middle"},children:["With ",(0,r.jsx)(t.code,{children:"queryFn"})]}),children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { QueryClient } from '@tanstack/react-query';\nimport { myCustomQueryFn } from './myCustomQueryFn';\n\nconst queryClient = new QueryClient();\n\n/**\n * Will execute the request:\n * ###\n * GET /posts?limit=10\n **/\nconst posts = await qraft.posts.getPosts.fetchQuery(\n  {\n    // \u2b07\ufe0e `queryKey` could be provided instead of `parameters`\n    queryKey: qraft.posts.getPosts.getQueryKey({ query: { limit: 10 } }),\n    // \u2b07\ufe0e `queryFn` could be provided instead of `requestFn`\n    queryFn: myCustomQueryFn,\n  },\n  queryClient\n);\n"})})}),(0,r.jsx)(i.A,{value:"with-default-query-fn",label:(0,r.jsxs)(t.span,{style:{verticalAlign:"middle"},children:["With default ",(0,r.jsx)(t.code,{children:"queryFn"})]}),children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { QueryClient } from '@tanstack/react-query';\nimport { myCustomQueryFn } from './myCustomQueryFn';\n\nconst queryClient = new QueryClient();\n\n/**\n * Set default `queryFn` for the `getPosts` Queries\n */\nqueryClient.setQueryDefaults(\n  qraft.posts.getPosts.fetchQuery.getQueryKey(),\n  { queryFn: myCustomQueryFn } // `myCustomQueryFn` will be used for all `getPosts` Queries\n);\n\n/**\n * Will execute the request:\n * ###\n * GET /posts?limit=10\n **/\nconst posts = await qraft.posts.getPosts.fetchQuery(\n  { parameters: { query: { limit: 10 } } },\n  queryClient\n);\n"})})})]})]})}function f(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},3023:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var r=n(3696);const s={},l=r.createContext(s);function i(e){const t=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(l.Provider,{value:t},e.children)}}}]);